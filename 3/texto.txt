1. Vemos que o projeto utiliza python, flask, sql em uma base de dados sqlite3
2. O gerenciador usa uma base de dados sqlite3, o softdes.py chama a base de dados do quiz.db que deve ter as tabelas USER, QUIZ e QUIZUSER
3. Sim, a aplicação usa autenticação básica HTTP. As senhas são armazenadas como hashes MD5 no banco de dados. Existe um protocolo para mudar a senha do usuario dentro do site.
4. Primeiro instalei o flask e o flask_httpauth em um venv no python:
  pip install flask
  pip install flask_httpauth
    Em sequencia verifiquei que a base de dados estava vazia e a inicializei com o sql do quiz.sql e adicionei o usúario admin:
  ls -lh quiz.db
  sqlite3 quiz.db < quiz.sql
  sqlite3 quiz.db
    sqlite> INSERT INTO USER(user, pass, type) VALUES ('admin', '21232f297a57a5a743894a0e4a801fc3', 'admin'); 
    sqlite> .exit 
  Por fim rodei o projeto com o flask:
    flask run
5. A aplicação é um servidor de exercícios de dessoft.
6. Guia de Usuário (Aluno):

    Como fazer login.
    Como visualizar os quizzes disponíveis.
    Como enviar soluções de código para os quizzes.
    Como visualizar o feedback e os resultados de seus envios.
7. Guia de Usuário (Professor):

    Como fazer login como administrador.
    Como criar, editar e excluir quizzes.
    Como visualizar os resultados e diagnósticos dos alunos.
    Como gerenciar usuários (embora isso possa ser feito manualmente via banco de dados).
8. Guia de Desenvolvedor:

    Estrutura do banco de dados (tabelas e campos).
    Explicação do fluxo de autenticação.
    Como adicionar ou modificar funcionalidades de quizzes.
    Instruções para configurar o ambiente de desenvolvimento e executar a aplicação.
    Considerações sobre segurança (como a migração do MD5 para um algoritmo mais seguro, esconder as chaves que estão abertas no código, melhorar para injeção de sql...).

